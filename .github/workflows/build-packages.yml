name: Build Packages

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  security-events: write

jobs:
  build-windows-msi:
    name: Build Windows MSI
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv venv
        .venv\Scripts\activate
        uv pip install -e ".[build]"
        uv pip install pyinstaller cx-freeze
    
    - name: Build executable
      run: |
        .venv\Scripts\activate
        pyinstaller --onefile --windowed --name "BlackBlaze-Backup-Tool" --icon=src/blackblaze_backup/icon.png main.py
    
    - name: Upload Windows executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: blackblaze-backup-windows-msi
        path: dist/BlackBlaze-Backup-Tool.exe

  build-ubuntu-deb:
    name: Build Ubuntu DEB Package
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install -e ".[build]"
        uv pip install pyinstaller fpm
    
    - name: Build executable
      run: |
        source .venv/bin/activate
        pyinstaller --onefile --windowed --name "blackblaze-backup-tool" --icon=src/blackblaze_backup/icon.png main.py
    
    - name: Create DEB package
      run: |
        source .venv/bin/activate
        mkdir -p package/usr/bin
        mkdir -p package/usr/share/applications
        mkdir -p package/usr/share/icons
        mkdir -p package/usr/share/doc/blackblaze-backup-tool
        
        # Copy executable
        cp dist/blackblaze-backup-tool package/usr/bin/
        chmod +x package/usr/bin/blackblaze-backup-tool
        
        # Create desktop file
        cat > package/usr/share/applications/blackblaze-backup-tool.desktop << EOF
        [Desktop Entry]
        Name=BlackBlaze B2 Backup Tool
        Comment=Cross-platform backup tool for BackBlaze B2
        Exec=blackblaze-backup-tool
        Icon=blackblaze-backup-tool
        Terminal=false
        Type=Application
        Categories=Utility;System;
        EOF
        
        # Copy icon
        cp src/blackblaze_backup/icon.png package/usr/share/icons/blackblaze-backup-tool.png
        
        # Create copyright file
        cat > package/usr/share/doc/blackblaze-backup-tool/copyright << EOF
        Format: https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/
        Upstream-Name: blackblaze-backup-tool
        Source: https://github.com/reshdesu/blackblaze2-backup
        
        Files: *
        Copyright: 2025 BlackBlaze B2 Backup Tool Contributors
        License: MIT
        
        License: MIT
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        EOF
        
        # Create changelog
        cat > package/usr/share/doc/blackblaze-backup-tool/changelog.Debian << EOF
        blackblaze-backup-tool (1.0.0-1) unstable; urgency=medium
        
          * Initial release
        
         -- BlackBlaze B2 Backup Tool Contributors <noreply@example.com>  $(date -R)
        EOF
        
        gzip -9 package/usr/share/doc/blackblaze-backup-tool/changelog.Debian
        
        # Create control file
        mkdir -p package/DEBIAN
        cat > package/DEBIAN/control << EOF
        Package: blackblaze-backup-tool
        Version: 1.0.0
        Section: utils
        Priority: optional
        Architecture: amd64
        Depends: libc6 (>= 2.17), libgcc-s1 (>= 3.0)
        Maintainer: BlackBlaze B2 Backup Tool Contributors <noreply@example.com>
        Description: Cross-platform backup tool for BackBlaze B2
         A modern GUI application for backing up local folders to BackBlaze B2 S3 buckets
         with automatic scheduling and background operation.
         .
         Features:
         - Cross-platform support (Windows and Ubuntu)
         - Modern GUI with PySide6
         - Background operation with system tray
         - Automatic scheduling
         - Secure credential management
         - Real-time progress tracking
        EOF
        
        # Build DEB package
        dpkg-deb --build package blackblaze-backup-tool_1.0.0_amd64.deb
    
    - name: Upload DEB artifact
      uses: actions/upload-artifact@v4
      with:
        name: blackblaze-backup-ubuntu-deb
        path: blackblaze-backup-tool_1.0.0_amd64.deb

  create-release:
    name: Create Release with Packages
    runs-on: ubuntu-latest
    needs: [build-windows-msi, build-ubuntu-deb]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download Windows MSI
      uses: actions/download-artifact@v4
      with:
        name: blackblaze-backup-windows-msi
        path: ./releases/windows
    
    - name: Download Ubuntu DEB
      uses: actions/download-artifact@v4
      with:
        name: blackblaze-backup-ubuntu-deb
        path: ./releases/ubuntu
    
    - name: Wait for main CI release to be created
      run: |
        echo "Waiting for main CI pipeline to create release..."
        sleep 60
    
    - name: Upload packages to existing release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        files: |
          releases/windows/*.exe
          releases/ubuntu/*.deb
        draft: false
        prerelease: false
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
