[project]
name = "blackblaze-backup-tool"
version = "1.0.87"
description = "A cross-platform GUI application for backing up local folders to BackBlaze B2 S3 buckets"
authors = [
    {name = "reshdesu", email = "reshdesu@users.noreply.github.com"},
    {name = "Claude (Anthropic)", email = "claude@anthropic.com"}
]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "PySide6>=6.6.0",
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    "cryptography>=41.0.0",
    "keyring>=24.0.0",
    "pillow>=11.3.0",
    "pyinstaller>=6.15.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-qt>=4.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
build = [
    "pyinstaller>=6.0.0",
    "build>=0.10.0",
]

[project.scripts]
bb2backup = "blackblaze_backup:main"
blackblaze-backup = "blackblaze_backup:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/blackblaze_backup"]
include = [
    "src/blackblaze_backup/icon.png",
    "src/blackblaze_backup/icon.ico",
    "src/blackblaze_backup/blackblaze-backup-tool.desktop",
    "src/blackblaze_backup/post_install.py"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/blackblaze_backup",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src/blackblaze_backup"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]
"main.py" = ["E402"]  # Allow imports after sys.path modification

[tool.ruff.lint.isort]
known-first-party = ["blackblaze_backup"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "botocore.*",
    "keyring.*",
    "cryptography.*",
]
ignore_missing_imports = true

[dependency-groups]
dev = [
    "ruff>=0.12.12",
]
